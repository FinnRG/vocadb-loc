<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllAlbums" xml:space="preserve">
    <value>Todos los albumes</value>
  </data>
  <data name="AllSongs" xml:space="preserve">
    <value>Todas las canciones</value>
  </data>
  <data name="ArtistDetails" xml:space="preserve">
    <value>Artistas</value>
  </data>
  <data name="ArtistPicture" xml:space="preserve">
    <value>Imagen del artista</value>
  </data>
  <data name="AverageAlbumRating" xml:space="preserve">
    <value>(Rating promedio: {0}).</value>
  </data>
  <data name="BaseVoicebank" xml:space="preserve">
    <value>Banco de voz base</value>
  </data>
  <data name="ChildVoicebanks" xml:space="preserve">
    <value>Bancos de voz derivados</value>
  </data>
  <data name="CollaborationAlbums" xml:space="preserve">
    <value>Colaboraciones</value>
  </data>
  <data name="Customize" xml:space="preserve">
    <value>Personalizar</value>
  </data>
  <data name="CustomizeSubscriptionTitle" xml:space="preserve">
    <value>Personalizar suscripción</value>
  </data>
  <data name="Follow" xml:space="preserve">
    <value>Seguir</value>
  </data>
  <data name="FollowCount" xml:space="preserve">
    <value>Seguido por {0} usuario(s) en VocaDB.</value>
  </data>
  <data name="Groups" xml:space="preserve">
    <value>Grupos y sellos discograficos</value>
  </data>
  <data name="GroupsHelp" xml:space="preserve">
    <value>Circulos productores, sellos discográficos y otros grupos</value>
  </data>
  <data name="Illustrator" xml:space="preserve">
    <value>Ilustrado por</value>
  </data>
  <data name="IllustratorOf" xml:space="preserve">
    <value>Ilustrado de</value>
  </data>
  <data name="MainAlbums" xml:space="preserve">
    <value>Albumes principales</value>
  </data>
  <data name="Members" xml:space="preserve">
    <value>Miembros</value>
  </data>
  <data name="MostlyUses" xml:space="preserve">
    <value>Mayores usos:</value>
  </data>
  <data name="RatedAlbums" xml:space="preserve">
    <value>{0} album(es) calificado(s)</value>
  </data>
  <data name="RatedSongs" xml:space="preserve">
    <value>{0} cancion(es) calificada(s).</value>
  </data>
  <data name="RecentAlbums" xml:space="preserve">
    <value>Albumes recientes</value>
  </data>
  <data name="RecentSongs" xml:space="preserve">
    <value>Canciones / PV's recientes</value>
  </data>
  <data name="Share" xml:space="preserve">
    <value>Compartir</value>
  </data>
  <data name="SubscriptionEmail" xml:space="preserve">
    <value>Si, notificarme dentro del sitio web de VocaDB y por correo electrónico.</value>
  </data>
  <data name="SubscriptionNoNotification" xml:space="preserve">
    <value>No recibir notificaciones.</value>
  </data>
  <data name="SubscriptionOnSite" xml:space="preserve">
    <value>Si, notificarme dentro del sitio web de VocaDB.</value>
  </data>
  <data name="SubscriptionOptions" xml:space="preserve">
    <value>¿Deseas recibir notificaciones cuando este autor, círculo, disquera, etc. lanze nuevas canciones o albumes?</value>
  </data>
  <data name="TopAlbums" xml:space="preserve">
    <value>Albumes populares</value>
  </data>
  <data name="TopSongs" xml:space="preserve">
    <value>Canciones populares</value>
  </data>
  <data name="Unfollow" xml:space="preserve">
    <value>Dejar de seguir</value>
  </data>
  <data name="ViewModeDetails" xml:space="preserve">
    <value>Detalles</value>
  </data>
  <data name="ViewModePlayList" xml:space="preserve">
    <value>Lista de reproducción</value>
  </data>
  <data name="ViewModeTiles" xml:space="preserve">
    <value>Titulos</value>
  </data>
  <data name="VoiceProvider" xml:space="preserve">
    <value>Proveedor de voz</value>
  </data>
  <data name="VoiceProviderOf" xml:space="preserve">
    <value>Proveedor de voz de</value>
  </data>
  <data name="YouHaveRatedSongs" xml:space="preserve">
    <value>Has calificado {0} cancion(es) de este artista.</value>
  </data>
</root>
