<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNew" xml:space="preserve">
    <value>Adicionar música</value>
  </data>
  <data name="ArAddArtist" xml:space="preserve">
    <value>Adicionar artista</value>
  </data>
  <data name="ArtistRolesTitle" xml:space="preserve">
    <value>Créditos de artista</value>
  </data>
  <data name="ArtistsForSong" xml:space="preserve">
    <value>Artistas para a música {0}</value>
  </data>
  <data name="ArtistsTab" xml:space="preserve">
    <value>Artistas</value>
  </data>
  <data name="BaCatNum" xml:space="preserve">
    <value>Catálogo</value>
  </data>
  <data name="BaDescription" xml:space="preserve">
    <value>Descrição do álbum</value>
  </data>
  <data name="BaDiscType" xml:space="preserve">
    <value>Tipo de gravação</value>
  </data>
  <data name="BaDiscTypeExplanation" xml:space="preserve">
    <value>Se não tiver a certeza que tipo é, tente saber como é que os artistas descrevem o seu próprio álbum. Pode encontrar mais informações na Wikipedia, MusicBrainz e Discogs, por exemplo.</value>
  </data>
  <data name="BaMainCoverPicture" xml:space="preserve">
    <value>Foto de capa</value>
  </data>
  <data name="BaNames" xml:space="preserve">
    <value>Nome primário (em uma ou mais línguas)</value>
  </data>
  <data name="BaPictureInfo" xml:space="preserve">
    <value>Tipos permitidos: {0}. Tamanho limite é {1} MB.</value>
  </data>
  <data name="BaReleaseDate" xml:space="preserve">
    <value>Data de lançamento</value>
  </data>
  <data name="BaReleaseDay" xml:space="preserve">
    <value>Dia</value>
  </data>
  <data name="BaReleaseEvent" xml:space="preserve">
    <value>Evento de lançamento</value>
  </data>
  <data name="BaReleaseMonth" xml:space="preserve">
    <value>Mês</value>
  </data>
  <data name="BaReleaseYear" xml:space="preserve">
    <value>Ano</value>
  </data>
  <data name="ChangesAreSavedImmediately" xml:space="preserve">
    <value>Mudanças nesta secção são gravadas automaticamente.</value>
  </data>
  <data name="ConfirmMoveToTrash" xml:space="preserve">
    <value>De certeza que quer pôr este álbum no lixo?</value>
  </data>
  <data name="EditTitle" xml:space="preserve">
    <value>Editar álbum - {0}</value>
  </data>
  <data name="ImagePreview" xml:space="preserve">
    <value>Previsualização da imagem</value>
  </data>
  <data name="MoveToTrash" xml:space="preserve">
    <value>Mandar para o lixo</value>
  </data>
  <data name="PiCreateNew" xml:space="preserve">
    <value>Criar novo</value>
  </data>
  <data name="PicturesTab" xml:space="preserve">
    <value>Fotos adicionais.</value>
  </data>
  <data name="PiPicturesGuide" xml:space="preserve">
    <value>A foto principal é editada a partir da tab "Informações Básicas". Faça upload the fotos pertencentes a este álbum e nada mais.</value>
  </data>
  <data name="PvAdd" xml:space="preserve">
    <value>Adicionar media</value>
  </data>
  <data name="PvAuthor" xml:space="preserve">
    <value>Autor</value>
  </data>
  <data name="PvIntro" xml:space="preserve">
    <value>Pode usar esta página para adicionar publicidades ou crossfades deste álbum.</value>
  </data>
  <data name="PvName" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="PvService" xml:space="preserve">
    <value>Serviço</value>
  </data>
  <data name="PvSupportedServices" xml:space="preserve">
    <value>Serviços suportados: YouTube, NicoNico, Vimeo, SoundCloud, Piapro e Bilibili.</value>
  </data>
  <data name="PvType" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="PvURL" xml:space="preserve">
    <value>URL:</value>
  </data>
  <data name="TrackPropertiesTitle" xml:space="preserve">
    <value>Propriedades da música</value>
  </data>
  <data name="TracksTab" xml:space="preserve">
    <value>Músicas</value>
  </data>
  <data name="TrAddTrackHelp" xml:space="preserve">
    <value>Nota: não escreva o nome de artista ou o número da música no nome da música. Os artistas serão especificados separadamente.</value>
  </data>
  <data name="TrDiscHead" xml:space="preserve">
    <value>Disco</value>
  </data>
  <data name="TrNameHead" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="TrSetArtists" xml:space="preserve">
    <value>Especificar artistas para as músicas selecionadas</value>
  </data>
  <data name="TrTrackHead" xml:space="preserve">
    <value>Música</value>
  </data>
  <data name="TrTrackNameHelp" xml:space="preserve">
    <value>Clique no nome da música para editar os seus artistas.</value>
  </data>
  <data name="UnableToSaveProperties" xml:space="preserve">
    <value>Erro em gravar as propriedades</value>
  </data>
</root>
