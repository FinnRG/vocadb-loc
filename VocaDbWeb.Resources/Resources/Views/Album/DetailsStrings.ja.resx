<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddToCollection" xml:space="preserve">
    <value>コレクションに追加</value>
  </data>
  <data name="CatalogNumber" xml:space="preserve">
    <value>カタログ番号</value>
  </data>
  <data name="Circle" xml:space="preserve">
    <value>サークル</value>
  </data>
  <data name="CustomFormatStringLabel" xml:space="preserve">
    <value>ダウンロード形式</value>
  </data>
  <data name="Disc" xml:space="preserve">
    <value>ディスク</value>
  </data>
  <data name="DownloadTrackList" xml:space="preserve">
    <value>楽曲情報をCSV形式でダウンロード</value>
  </data>
  <data name="EditAlbumInCollection" xml:space="preserve">
    <value>コレクション内のアルバムを編集</value>
  </data>
  <data name="Labels" xml:space="preserve">
    <value>レーベル</value>
  </data>
  <data name="MatchingArtists" xml:space="preserve">
    <value>同じアーティスト</value>
  <comment>needs impr</comment></data>
  <data name="MatchingLikes" xml:space="preserve">
    <value>好みごとのマッチング</value>
  <comment>needs impr</comment></data>
  <data name="MatchingTags" xml:space="preserve">
    <value>同じタグ</value>
  <comment>needs impr</comment></data>
  <data name="MediaType" xml:space="preserve">
    <value>メディアの種類</value>
  </data>
  <data name="MyRating" xml:space="preserve">
    <value>評価</value>
  </data>
  <data name="OtherArtists" xml:space="preserve">
    <value>他のアーティスト</value>
  </data>
  <data name="OwnedBy" xml:space="preserve">
    <value>{0}人が所持</value>
  </data>
  <data name="Producers" xml:space="preserve">
    <value>プロデューサー</value>
  </data>
  <data name="Ratings" xml:space="preserve">
    <value>件の評価</value>
  </data>
  <data name="RelatedAlbums" xml:space="preserve">
    <value>関連アルバム</value>
  </data>
  <data name="ReleaseDate" xml:space="preserve">
    <value>発売日</value>
  </data>
  <data name="ReleaseDateIsInTheFarFuture" xml:space="preserve">
    <value>(未公開)</value>
  </data>
  <data name="ReleaseDateIsInTheNearFuture" xml:space="preserve">
    <value>(近日公開予定)</value>
  </data>
  <data name="ReleaseDateIsInThePast" xml:space="preserve">
    <value>(公開日)</value>
  </data>
  <data name="ReleaseEvent" xml:space="preserve">
    <value>発売イベント</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>リセット</value>
  </data>
  <data name="Share" xml:space="preserve">
    <value>共有</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>コレクション状態</value>
  </data>
  <data name="Tracklist" xml:space="preserve">
    <value>トラックリスト</value>
  </data>
  <data name="Vocalists" xml:space="preserve">
    <value>ボーカリスト</value>
  </data>
  <data name="WishlistedBy" xml:space="preserve">
    <value>{0}人がウィッシュリストに追加</value>
  </data>
  <data name="AlbumDetails" xml:space="preserve">
    <value>アルバム</value>
  </data>
  <data name="Band" xml:space="preserve">
    <value>バンド・ユニット</value>
  </data>
  <data name="CoverPicture" xml:space="preserve">
    <value>ジャケット</value>
  </data>
  <data name="Customize" xml:space="preserve">
    <value>カスタマイズ</value>
  </data>
  <data name="NoTracklist" xml:space="preserve">
    <value>トラックリストが存在しません。登録したユーザーの誰もが提供できます。</value>
  </data>
  <data name="OwnedByTitle" xml:space="preserve">
    <value>所得ユーザー</value>
  </data>
  <data name="PVs" xml:space="preserve">
    <value>広告・クロスフェード</value>
  </data>
  <data name="UpdateCollection" xml:space="preserve">
    <value>コレクションを更新</value>
  </data>
  <data name="WishlistedByTitle" xml:space="preserve">
    <value>ウィッシュリストしたユーザー</value>
  </data>
  <data name="AlbumInCollections" xml:space="preserve">
    <value>アルバムコレクション</value>
    <comment>Popup title</comment>
  </data>
  <data name="TotalLength" xml:space="preserve">
    <value>トラック数:{0}</value>
  </data>
</root>