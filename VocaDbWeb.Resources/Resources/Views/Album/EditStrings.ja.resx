<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNew" xml:space="preserve">
    <value>トラックを追加</value>
  </data>
  <data name="ArAddArtist" xml:space="preserve">
    <value>アーティストを追加</value>
  </data>
  <data name="ArtistRolesTitle" xml:space="preserve">
    <value>アーティストの役割</value>
  </data>
  <data name="ArtistsTab" xml:space="preserve">
    <value>アーティスト</value>
  </data>
  <data name="BaCatNum" xml:space="preserve">
    <value>カタログ番号</value>
  </data>
  <data name="BaDescription" xml:space="preserve">
    <value>アルバム概要</value>
  </data>
  <data name="BaDiscType" xml:space="preserve">
    <value>レコードタイプ</value>
  </data>
  <data name="BaMainCoverPicture" xml:space="preserve">
    <value>ジャケット（表）</value>
  </data>
  <data name="BaNames" xml:space="preserve">
    <value>主なタイトル</value>
  </data>
  <data name="BaPictureInfo" xml:space="preserve">
    <value>有効なファイルタイプ: {0}. 最大ファイルサイズ: {1} MB.</value>
  </data>
  <data name="BaReleaseDate" xml:space="preserve">
    <value>公開日</value>
  </data>
  <data name="BaReleaseDay" xml:space="preserve">
    <value>日</value>
  </data>
  <data name="BaReleaseEvent" xml:space="preserve">
    <value>リリースイベント</value>
  </data>
  <data name="BaReleaseMonth" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="BaReleaseYear" xml:space="preserve">
    <value>年</value>
  </data>
  <data name="ChangesAreSavedImmediately" xml:space="preserve">
    <value>このタブへの変更は自動的に保存されます。</value>
  </data>
  <data name="EditTitle" xml:space="preserve">
    <value>アルバム編集　-　{0}</value>
  </data>
  <data name="ImagePreview" xml:space="preserve">
    <value>画像プレビュー</value>
  </data>
  <data name="MediaTab" xml:space="preserve">
    <value>メディア</value>
  </data>
  <data name="MoveToTrash" xml:space="preserve">
    <value>ゴミ箱へ移動</value>
  </data>
  <data name="ConfirmMoveToTrash" xml:space="preserve">
    <value>ゴミ箱へ移動してもよろしいですか？</value>
  </data>
  <data name="PiCreateNew" xml:space="preserve">
    <value>新規作成</value>
  </data>
  <data name="PvAdd" xml:space="preserve">
    <value>メディア追加</value>
  </data>
  <data name="PvAuthor" xml:space="preserve">
    <value>投稿者</value>
  </data>
  <data name="PvIntro" xml:space="preserve">
    <value>このページで宣言ビデオやクロスフェードを追加してください。</value>
  </data>
  <data name="PvName" xml:space="preserve">
    <value>タイトル</value>
  </data>
  <data name="PvService" xml:space="preserve">
    <value>サービス</value>
  </data>
  <data name="PvSupportedServices" xml:space="preserve">
    <value>対応サービス：Youtube、ニコニコ、Vimeo、SoundCloud、ピアプロ、Bilibili</value>
  </data>
  <data name="PvType" xml:space="preserve">
    <value>タイプ</value>
  </data>
  <data name="PvURL" xml:space="preserve">
    <value>リンク (URL): </value>
  </data>
  <data name="TracksTab" xml:space="preserve">
    <value>トラック</value>
  </data>
  <data name="TrDiscHead" xml:space="preserve">
    <value>ディスク</value>
  </data>
  <data name="TrTrackHead" xml:space="preserve">
    <value>トラック</value>
  </data>
  <data name="ArtistsForSong" xml:space="preserve">
    <value>{0} のアーティスト</value>
  </data>
  <data name="TrackPropertiesTitle" xml:space="preserve">
    <value>トラック詳細</value>
  </data>
  <data name="TrNameHead" xml:space="preserve">
    <value>タイトル</value>
  </data>
  <data name="TrSetArtists" xml:space="preserve">
    <value>選択したトラックにアーティストを追加</value>
  </data>
  <data name="TrAddTrackHelp" xml:space="preserve">
    <value>注：トラックタイトルにアーティスト名やトラック番号を入れないでください。アーティストは別に指定されます。</value>
  </data>
  <data name="TrTrackNameHelp" xml:space="preserve">
    <value>トラックタイトルをクリックするとアーティスト選択ができます。</value>
  </data>
  <data name="UnableToSaveProperties" xml:space="preserve">
    <value>保存ができませんでした。</value>
  </data>
  <data name="PicturesTab" xml:space="preserve">
    <value>追加画像</value>
  </data>
  <data name="PiPicturesGuide" xml:space="preserve">
    <value>ジャケットカバーは「基本情報」のタブで変更してください。アルバムに関係する画像以外は追加しないでください。</value>
  </data>
  <data name="BaDiscTypeExplanation" xml:space="preserve">
    <value>レコードタイプが明確でない場合はアーティストがどのように指定しているか検索してください。違うタイプの詳細の説明はWikipedia、 Discogs、又は Musicbrainz を参照ください。</value>
  </data>
  <data name="BaBarcode" xml:space="preserve">
    <value>バーコード</value>
  </data>
  <data name="DiAddRow" xml:space="preserve">
    <value>もう一つの行</value>
  </data>
  <data name="DiAudio" xml:space="preserve">
    <value>オーディオ</value>
  </data>
  <data name="DiName" xml:space="preserve">
    <value>名</value>
  </data>
  <data name="DiNote" xml:space="preserve">
    <value>アルバムは複数のディスクがあれば、ここに余分な特色を特定してください。ディスクの名とタイプも特定していいです。ディスクの名は任意です。特定しなかった場合は、デフォルトの「ディスク＃」を使います。＃はディスクの番号を指します。</value>
  </data>
  <data name="DiscsTab" xml:space="preserve">
    <value>ディスク</value>
  </data>
  <data name="DiType" xml:space="preserve">
    <value>タイプ</value>
  </data>
  <data name="DiVideo" xml:space="preserve">
    <value>ビデオ</value>
  </data>
  <data name="TrNextDisc" xml:space="preserve">
    <value>次のディスク</value>
  </data>
</root>
