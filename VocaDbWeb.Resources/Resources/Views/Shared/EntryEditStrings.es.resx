<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Aliases" xml:space="preserve">
    <value>Pseudonimos adicionales (opcional)</value>
  </data>
  <data name="AliasesDesc" xml:space="preserve">
    <value>Los pseudonimos son adicionales. La mayoría de veces no son traducciones del nombre principal, aún así las traducciones bien conocidas y correctas pueden incluirse como pseudonimos.</value>
  </data>
  <data name="BasicInfo" xml:space="preserve">
    <value>Información básica</value>
  </data>
  <data name="ConcurrentEditWarning" xml:space="preserve">
    <value>{0} tambien editó esta entrada hace {1} minuto(s).</value>
  </data>
  <data name="ConcurrentEditWarningNow" xml:space="preserve">
    <value>El usuario {0} está editando esta entrada ahora mismo.</value>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>Por favor confirma que deseas eliminar esta entrada, y escribe una explicación del porque (opcional, pero recomendado).</value>
  </data>
  <data name="ConfirmMoveToTrash" xml:space="preserve">
    <value>Por favor confirma que deseas eliminar esta entrada permanentemente. Esta acción es irreversible. escribe una explicación del porque de la eliminación (opcional, pero recomendado).</value>
  </data>
  <data name="DefaultLanguageHelp" xml:space="preserve">
    <value>El idioma original del nombre de esta entrada, usualmente este es el mas usado por fuentes oficiales.</value>
  </data>
  <data name="DefaultLanguageSelection" xml:space="preserve">
    <value>Idioma original</value>
  </data>
  <data name="ExternalLinksQuickHelp" xml:space="preserve">
    <value>Links externos concernientes a esta entrada. Considera que links no originales (tales como descargas ilegales, reprints no autorizados, etcétera) no estan permitidos.&lt;br /&gt;
&lt;br /&gt;
Primero llena la casilla con la URL, si el dominio o procedencia de este resultan familiares para la base de datos, una descripción y categoría serán sugeridos automaticamente.&lt;br /&gt;
&lt;br /&gt;
Oficial: Sitio oficial del artista (usualmente son blogs, portafolios web, páginas de facebook, etc...).&lt;br /&gt;
Comercial: Distribuiciones comerciales autorizadas, tales como la página de venta en Amazon, CDJapan, iTunes, etc.&lt;br /&gt;
Referencial: Sitios colaborativos con inforamción oficial, tales como wikis.&lt;br /&gt;
Otros: Para aquellos sitos que no encajan en ninguna de las categorías anteriores.&lt;br /&gt;</value>
  </data>
  <data name="Merge" xml:space="preserve">
    <value>Fusionar</value>
  </data>
  <data name="MoveToTrash" xml:space="preserve">
    <value>Desechar (Mover a la basura)</value>
  </data>
  <data name="NameHelp" xml:space="preserve">
    <value>Si la entrada tiene un nombre que no está en inglés (por ejemplo, en japonés) o en algún otro idioma sin específicar, colocalo en la casilla de nombre original (no inglés). Si conoces el nombre romanizado (en alfabeto latino, tambien llamado romaji) especifícalo igualmente. Si el nombre oficial de la entrada es en inglés, o tiene una traducción válida al inglés, escríbela en la casilla de nombre en inglés.&lt;br /&gt;
&lt;br /&gt;
Nótese que no necesitas copiar los nombres sin específicar, el sistema va a sustituir esos cuando se requiera. Por ejemplo, cuando carecen de un nombre romanizado, casos en los que el sistema usará el nombre por defecto.&lt;br /&gt;
&lt;br /&gt;
Los nombres adicionales se pueden incluir como pseudonimos. Para mas información ver la guía.</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>Restaurar</value>
  </data>
  <data name="SaveWarning" xml:space="preserve">
    <value>Esta entrada tiene advertencias pre-validación. ¿Estas seguro de que lo quieres guardar como terminada?</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Estado</value>
  </data>
  <data name="TranslatedStringAddEnglishTranslation" xml:space="preserve">
    <value>Añadir una traducción en inglés</value>
  </data>
  <data name="TranslatedStringEnglishTranslation" xml:space="preserve">
    <value>Traducción en inglés</value>
  </data>
  <data name="UpdateNotes" xml:space="preserve">
    <value>Notas de actualización (opcional)</value>
  </data>
  <data name="WebLinks" xml:space="preserve">
    <value>Links externos</value>
  </data>
</root>
