<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Captcha" xml:space="preserve">
    <value>Captcha</value>
  </data>
  <data name="CaptchaInvalid" xml:space="preserve">
    <value>el captcha es inválido.</value>
  </data>
  <data name="DoRegister" xml:space="preserve">
    <value>Registrarse</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Correo electrónico (requerido obligatoriamente)</value>
  </data>
  <data name="EmailIsRequired" xml:space="preserve">
    <value>Se requiere que ingreses tu correo electrónico.</value>
  </data>
  <data name="EmailNote" xml:space="preserve">
    <value>Tu dirección de correo electrónicono no será mostrada a otros usuarios, asegurate de que es válida. La necesitaras en caso de que llegues a olvidar tu contraseña. Dado que VocaDB utiliza gravatar para enlazar tu foto de perfil, el correo electrónico que utilices debe ser el mismo que tu cuenta de gravatar (si no tienes, crea una). Tambien puedes cambiar de dirección de correo electrónico posteriormente.</value>
  </data>
  <data name="EmailTaken" xml:space="preserve">
    <value>Esta dirección de correo electrónico ya está en uso. Si es tuya y sospechas que alguien mas la está usando puedes contactar a un miembro del staff, si ya tienes una cuenta registrada con este correo, puedes tratar reestableciendo tu constraseña, cualquier otro caso contacta a soporte.</value>
  </data>
  <data name="LoginWithTwitter" xml:space="preserve">
    <value>Iniciar sesión con twitter</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Contraseña</value>
  </data>
  <data name="PasswordIsRequired" xml:space="preserve">
    <value>Se requiere la contraseña.</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Registrate</value>
  </data>
  <data name="RegistrationUnsuccessful" xml:space="preserve">
    <value>Ha habido un error al registrarte.</value>
  </data>
  <data name="TwitterNote" xml:space="preserve">
    <value>De manera alternativa, puedes iniciar sesión con tu cuenta de twitter enlazandola.</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Nombre de usuario</value>
  </data>
  <data name="UsernameIsRequired" xml:space="preserve">
    <value>Se requiere esepcificar un nombre de usuario</value>
  </data>
  <data name="UsernameNote" xml:space="preserve">
    <value>El nombre de usuario debe contener al menos 3 caracteres, y solo puede componerse de letras, números y guiones bajos. Por otro lado la contraseña se debe componer de al menos {0} caracteres.</value>
  </data>
  <data name="UsernameTaken" xml:space="preserve">
    <value>Ya existe una cuenta con ese nombre de usuario.</value>
  </data>
</root>