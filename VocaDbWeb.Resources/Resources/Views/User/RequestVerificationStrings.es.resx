<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArtistTitle" xml:space="preserve">
    <value>Entrada del artista que soy y/o represento (requerido)</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>&lt;p&gt;
			Si eres un productor, ilustrador, animador o cualquier tipo de productor de contenido artístico para música y videos Vocaloid,
			o cabeza/representador de un círculo productor, favor de llenar este formato para solicitar tu verificación (la cual sera revisada posteriormente por alguien en el staff).
		&lt;/p&gt;
		&lt;p&gt;
			Una vez realizada la verificación, tu nombre de usuario será mostrado en tu entrada de artista y viceversa.
			Se requiere que nos proporciones una prueba para corruborar y legitimizar tu identidad como artista de la entrada correspondiente, de lo contrario no será tomada en cuenta.
			Por ejemplo, publicar un link o una nota en tu twitter, blog o cualquier medio de presencia en linea referenciando/etiquetando a VocaDB es una forma valida para comprobar que eres quien dices ser.
			Igualmente, deben existir al menos una o dos canciones de tu autoría y/o colaboración (Vocaloid o UTAU) registradas en nuestra base de datos - si no las hay las puedes subir tu mismo.
		&lt;/p&gt;
		&lt;p&gt;
			Despues de realizada tu verificación, podrás editar la entrada acerca de ti.
			Por ahora la protección de la verificación se reserva a tu entrada como artista - las entradas de canciones y albumes incluidas en ese amparo.
		&lt;/p&gt;
		&lt;p&gt;
			Considera que dependiendo las circunstancias nos reservamos el derecho de rechazar tu solicitud de verificación. Las razones pueden ser cualquiera de las antes mencionadas.
			En el supuesto caso de que tu solicitud sea rechazada, y las razones de esta no sean tan evidentes, vamos a intentar contactarte para corregir y poner en orden cualquier detalle y de ser el caso repitas el proceso de verificación.
		&lt;/p&gt;</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Iniciar sesión</value>
  </data>
  <data name="MessageTitle" xml:space="preserve">
    <value>Solicitar mensaje (requerido)</value>
  </data>
  <data name="NotLoggedInMessage" xml:space="preserve">
    <value>Lo sentimos, necesitas {0} o {1} para utilizar esta función.</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Solicitar verificación de cuenta</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Enviar solicitud</value>
  </data>
  <data name="Signup" xml:space="preserve">
    <value>Registrarse</value>
  </data>
</root>
